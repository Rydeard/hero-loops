{"version":3,"sources":["components/main/TabBar.tsx","components/containers/LayoutContainer.tsx","components/tabs/shared/TabHeader.tsx","components/tabs/shared/TabTitle.tsx","components/tabs/home/LoopOverviewListItem.tsx","components/tabs/home/LoopOverviewList.tsx","components/tabs/home/LoopOverview.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TabBar","props","state","selectedTabIndex","tabs","this","forEach","tabName","index","classes","push","onClick","setState","className","id","React","Component","LayoutContainer","leftContainerContent","rightContainerContent","TabHeader","height","width","color","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","TabTitle","leftString","rightString","LoopOverviewListItem","loopItem","icon","primaryText","secondaryText","minutes","LoopOverviewList","loopListItems","loopItems","LoopOverview","fetchLoopItems","App","gameTick","prevGameTick","deltaTime","Date","now","tick","interval","setInterval","intervalRef","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a69137e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TabBar.css';\r\n\r\ntype TabBarProps = {\r\n    tabs: Array<string>;\r\n}\r\n\r\ntype TabBarState = {\r\n    selectedTabIndex: number;\r\n}\r\n\r\nexport default class TabBar extends React.Component<TabBarProps, TabBarState> {\r\n    constructor(props: TabBarProps) {\r\n        super(props)\r\n        this.state = { selectedTabIndex: 0 }\r\n    }\r\n    render() {\r\n        let tabs: Array<JSX.Element> = [];\r\n        this.props.tabs.forEach((tabName, index) => {\r\n            const classes = `tab-bar-entry ${this.state.selectedTabIndex === index ? 'tab-bar-entry-focused' : ''}`;\r\n            tabs.push(\r\n                <li key={tabName}\r\n                    onClick={() => { this.setState({ selectedTabIndex: index }) }}\r\n                    className={classes}>{tabName}\r\n                </li>\r\n            )\r\n        })\r\n\r\n        return <ol id=\"tab-bar\">\r\n            {tabs}\r\n        </ol>\r\n    }\r\n}","import React from 'react';\r\nimport './LayoutContainer.css';\r\n\r\ntype LayoutContainerProps = {\r\n    leftContainerContent: React.ReactElement;\r\n    rightContainerContent: React.ReactElement;\r\n}\r\n\r\ntype LayoutContainerState = {\r\n}\r\n\r\nexport default class LayoutContainer extends React.Component<LayoutContainerProps, LayoutContainerState> {\r\n    constructor(props: LayoutContainerProps) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return <div id=\"container-wrapper\">\r\n            <div id=\"left-container\">\r\n                {this.props.leftContainerContent}\r\n            </div>\r\n\r\n            <div id=\"right-container\">\r\n                {this.props.rightContainerContent}\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport './TabHeader.css';\r\n\r\ntype TabHeaderProps = {\r\n    leftString: String\r\n    rightString: String\r\n}\r\n\r\nexport default class TabHeader extends React.Component<TabHeaderProps> {\r\n    constructor(props: TabHeaderProps) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return <div className=\"tab-header\">\r\n            <h2>Exploring...</h2>\r\n            <p><svg height=\"24\" width=\"24\" color=\"white\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n            </svg></p>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport './TabTitle.css';\r\n\r\ntype TabTitleProps = {\r\n    leftString: String\r\n    rightString: String\r\n}\r\n\r\nexport default class TabTitle extends React.Component<TabTitleProps> {\r\n    constructor(props: TabTitleProps) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return <div className=\"tab-title\">\r\n            <h1>{this.props.leftString}</h1>\r\n            <p>{this.props.rightString}</p>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\n\r\n\r\ntype LoopOverviewListItemProps = {\r\n    loopItem: LoopItem\r\n}\r\n\r\nexport default class LoopOverviewListItem extends React.Component<LoopOverviewListItemProps> {\r\n    render() {\r\n        return <li className=\"loop-list-item-1\">\r\n            {this.props.loopItem.icon}\r\n            <h1>{this.props.loopItem.primaryText}</h1>\r\n            <h2>{this.props.loopItem.secondaryText}</h2>\r\n            <p>{this.props.loopItem.minutes}m</p>\r\n        </li>\r\n    }\r\n}","import React from \"react\";\r\nimport LoopOverviewListItem from \"./LoopOverviewListItem\";\r\n\r\ndeclare global {type LoopItem = {\r\n    icon:React.ReactElement\r\n    primaryText:string\r\n    secondaryText:string\r\n    minutes:number\r\n}}\r\n\r\ntype LoopOverviewListProps = {\r\n    loopItems:Array<LoopItem>\r\n}\r\n\r\nexport default class LoopOverviewList extends React.Component<LoopOverviewListProps> {\r\n    constructor(props:LoopOverviewListProps){\r\n        super(props)\r\n    }\r\n    render() {\r\n        let loopListItems: Array<JSX.Element> = [];\r\n        this.props.loopItems.forEach((loopItem, index) => {\r\n            loopListItems.push(\r\n                <LoopOverviewListItem key={index}\r\n                loopItem={loopItem}>\r\n                </LoopOverviewListItem>\r\n            )\r\n        })\r\n        return <ol id=\"loop-overview-list\">\r\n            {loopListItems}\r\n        </ol>\r\n    }\r\n}","import React from \"react\";\r\nimport TabHeader from \"../shared/TabHeader\";\r\nimport TabTitle from \"../shared/TabTitle\";\r\nimport LoopOverviewList from \"./LoopOverviewList\";\r\nimport './LoopOverview.css'\r\n\r\n\r\ntype LoopOverviewProps = {\r\n}\r\n\r\nexport default class LoopOverview extends React.Component<LoopOverviewProps> {\r\n    render() {\r\n        return <div>\r\n            <TabTitle leftString={\"Day 1\"} rightString={\"1:30pm\"}></TabTitle>\r\n            <TabHeader leftString={\"Exploring...\"} rightString={\"Test\"}></TabHeader>\r\n            <LoopOverviewList loopItems={this.fetchLoopItems()}></LoopOverviewList>\r\n            </div>\r\n    }\r\n\r\n    fetchLoopItems():Array<LoopItem>{\r\n        let loopItems:Array<LoopItem> = [\r\n            {icon:<svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z\" />\r\n          </svg>,\r\n                primaryText:\"Test\",\r\n                secondaryText:\"Test\",\r\n                minutes:30}\r\n        ]\r\n        return loopItems;\r\n    }\r\n}","import './App.css';\nimport TabBar from './components/main/TabBar';\nimport 'typeface-inter';\nimport GameTickTest from './components/main/GameTickTest';\nimport React from 'react';\nimport LayoutContainer from './components/containers/LayoutContainer';\nimport LoopOverview from './components/tabs/home/LoopOverview';\n\ntype AppProps = {\n}\n\ntype AppState = {\n  gameTick: number\n  prevGameTick: number\n  deltaTime: number\n  intervalRef?: NodeJS.Timeout\n}\n\ntype GameData = {\n\n}\n\nexport default class App extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props)\n    this.state = {\n      gameTick: 0,\n      prevGameTick: 0,\n      deltaTime: 0\n    }\n  }\n\n  render() {\n    //        <GameTickTest gameTick={this.state.gameTick}></GameTickTest>\n\n    return (\n      <div>\n        <TabBar tabs={[\"Home\", \"Loop\", \"Character\", \"Skills\"]}></TabBar>\n        <LayoutContainer leftContainerContent={<LoopOverview></LoopOverview>} rightContainerContent={<div></div>}></LayoutContainer>\n      </div>\n\n    );\n  }\n\n  tick() {\n    this.setState(state => ({\n      prevGameTick: state.gameTick,\n      gameTick: Date.now(),\n      deltaTime: state.gameTick - state.prevGameTick\n    }));\n  }\n\n  componentDidMount() {\n    this.tick()\n    let interval = setInterval(() => { this.tick() }, 1000);\n    this.setState({ intervalRef: interval });\n  }\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}